/*****************************************************************//**
 * \file   Fence.h
 * \brief  フェンスクラス
 * 
 * \author Hiroto Kuge
 * \date   October 2022
 *********************************************************************/
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <d3d12.h>
#include "ComPtr.h"

class Fence{
	//-----------------------------------------------------------------------------
	// list of friend classes and methods
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
	
public:
	//-----------------------------------------------------------------------------
	// public variables.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
	//-----------------------------------------------------------------------------
	// public methods.
	//-----------------------------------------------------------------------------
	//!{
	
	/*****************************************************************//**
	 * \brief コンストラクタ
	 *********************************************************************/
	Fence();
	
	/*****************************************************************//**
	 * \brief デストラクタ
	 *********************************************************************/
	~Fence();
	
	/*****************************************************************//**
	 * \brief 初期化処理
	 * 
	 * \param pDevice デバイス
	 * \return true		初期化に成功
	 * \return false	初期化に失敗
	 *********************************************************************/
	bool Init(ID3D12Device* pDevice);

	/*****************************************************************//**
	 * \brief 終了処理
	 *********************************************************************/
	void Term();

	/*****************************************************************//**
	 * \brief シグナル状態になるまで指定された時間待機する
	 * \param pQueue	コマンドキュー
	 * \param timeout	タイムアウト時間(ms)
	 *********************************************************************/
	void Wait(ID3D12CommandQueue* pQueue,UINT timeout_ms);

	/*****************************************************************//**
	 * \brief シグナル状態になるまでずっと待機する
	 * \param pQueue	コマンドキュー
	 *********************************************************************/
	void Sync(ID3D12CommandQueue* pQueue);
	
	//!} 
private:
	//-----------------------------------------------------------------------------
	// private variables.
	//-----------------------------------------------------------------------------
	//!{
	
	ComPtr<ID3D12Fence> m_pFence;	// フェンス
	HANDLE				m_event;	// イベント
	UINT				m_counter;	// 現在のカウンター

	//!} 
	//-----------------------------------------------------------------------------
	// private methods.
	//-----------------------------------------------------------------------------
	//!{
	
	Fence			(const Fence&) = delete;
	void operator = (const Fence&) = delete;

	//!} 
};

