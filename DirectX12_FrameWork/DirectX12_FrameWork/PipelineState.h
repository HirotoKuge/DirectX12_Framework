/*****************************************************************//**
 * \file   PipelineState.h
 * \brief  グラフィクスパイプラインステートオブジェクトクラス
 * 
 * \author Hiroto Kuge
 * \date   October 2022
 *********************************************************************/
#pragma once

 //-----------------------------------------------------------------------------
 // Includes.
 //-----------------------------------------------------------------------------
#include <d3d12.h>
#include "ComPtr.h"

class PipelineState{
	//-----------------------------------------------------------------------------
	// list of friend classes and methods.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
public:
	//-----------------------------------------------------------------------------
	// public variables.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
	//-----------------------------------------------------------------------------
	// public methods.
	//-----------------------------------------------------------------------------
	//!{
	 
	/*****************************************************************//**
	 * \brief コンストラクタ
	 *********************************************************************/
	PipelineState();

	/*****************************************************************//**
	 * \brief デストラクタ
	 *********************************************************************/
	~PipelineState();
	
	/*****************************************************************//**
	 * \brief 初期化処理
	 *  
	 * \param pDevice			デバイス
	 * \param desc				構成設定
	 * \param pVsPath			頂点シェーダーパス
	 * \param pPsPath			ピクセルシェーダーパス
	 * \param rootSignature		ルートシグネチャ
	 * \return true				初期化に成功
	 * \return false			初期化に失敗
	 *********************************************************************/
	bool Init(
		ID3D12Device* pDevice, 
		D3D12_GRAPHICS_PIPELINE_STATE_DESC& desc,
		const wchar_t* pVsPath,
		const wchar_t* pPsPath,
		ID3D12RootSignature* pRootSignature);


	/*****************************************************************//**
	 * \brief 終了処理
	 *********************************************************************/
	void Term();

	/*****************************************************************//**
	 * \brief パイプラインステートオブジェクトを取得
	 *  
	 * \return パイプラインステートオブジェクト(ポインタ)
	 *********************************************************************/
	ID3D12PipelineState* Get();

	//!}
private:
	//-----------------------------------------------------------------------------
	// private variables.
	//-----------------------------------------------------------------------------
	//!{
			
	D3D12_GRAPHICS_PIPELINE_STATE_DESC	m_desc = {};		// 構成設定
	ComPtr<ID3D12PipelineState>			m_pPipelineState;	// パイプラインステート
	ComPtr<ID3DBlob>					m_pVsBlob;			// 頂点シェーダー
	ComPtr<ID3DBlob>					m_pPsBlob;			// ピクセルシェーダー

	//!}
	//-----------------------------------------------------------------------------
	// private methods.
	//-----------------------------------------------------------------------------
	//!{

	PipelineState(const PipelineState&) = delete;		// アクセス禁止
	void operator = (const PipelineState&) = delete;	// アクセス禁止

	//!} 
};

