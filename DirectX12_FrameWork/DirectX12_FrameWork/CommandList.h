/*****************************************************************//**
 * \file   CommandList.h
 * \brief  コマンドリストクラス
 * 
 * \author Hiroto Kuge
 * \date   October 2022
 *********************************************************************/
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <d3d12.h>
#include <cstdint>
#include <vector>
#include "ComPtr.h"

class CommandList{

	//-----------------------------------------------------------------------------
	//	list of friend classes and methods
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 

public:
	//-----------------------------------------------------------------------------
	//	public variables.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
	//-----------------------------------------------------------------------------
	//	public methods
	//-----------------------------------------------------------------------------
	//!{
	
	/*****************************************************************//**
	 * \brief コンストラクタ
	 *********************************************************************/
	CommandList();

	/*****************************************************************//**
	 * \brief デストラクタ
	 *********************************************************************/
	~CommandList();

	/*****************************************************************//**
	 * \brief 初期化処理
	 * \param pDevice	デバイス
	 * \param type		コマンドリストタイプ
	 * \param count		コマンドアロケータの数　ダブルバッファなら２に設定
	 * \return	true	初期化に成功 
	 * \return	false	初期化に失敗
	 *********************************************************************/
	bool Init(
		ID3D12Device* 
		pDevice, 
		D3D12_COMMAND_LIST_TYPE type, 
		uint32_t count);

	/*****************************************************************//**
	 * \brief 終了処理
	 *********************************************************************/
	void Term();

	/*****************************************************************//**
	 * \brief	リセット処理をしたコマンドリストを取得
	 * \return	リセット処理をしたコマンドリスト
	 *********************************************************************/
	ID3D12GraphicsCommandList* GetListReset();

	//!} 
private:
	//-----------------------------------------------------------------------------
	// private variables.
	//-----------------------------------------------------------------------------
	//!{

	ComPtr<ID3D12GraphicsCommandList>           m_pCmdList;		//	コマンドリスト
	std::vector<ComPtr<ID3D12CommandAllocator>> m_pAllocators;	//	コマンドアロケータ
	uint32_t                                    m_index;		//	アロケータの番号

	//!} 
	//-----------------------------------------------------------------------------
	// private methods.
	//-----------------------------------------------------------------------------
	//!{
	
	CommandList(const CommandList&) = delete;
	void operator = (const CommandList&) = delete;

	//!} 
};



