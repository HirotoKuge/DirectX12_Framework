/*****************************************************************//**
 * \file   Sprite.h
 * \brief  スプライトクラス
 * 
 * \author Hiroto Kuge
 * \date   October 2022
 *********************************************************************/
#pragma once

//-----------------------------------------------------------------------------
// Includes.
//-----------------------------------------------------------------------------
#include "SharedStruct.h"
#include "VertexBuffer.h"
#include "IndexBuffer.h"


//-----------------------------------------------------------------------------
// Sprite class.
//-----------------------------------------------------------------------------
class Sprite{
	//-----------------------------------------------------------------------------
	// list of friend classes and methods.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!}
public:	 
	//-----------------------------------------------------------------------------
	// public variables.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
	//-----------------------------------------------------------------------------
	// public methods.
	//-----------------------------------------------------------------------------
	//!{
	
	/*****************************************************************//**
	 * \brief コンストラクタ
	 *********************************************************************/
	Sprite();

	/*****************************************************************//**
	 * \brief デストラクタ
	 *********************************************************************/
	~Sprite();
	
	/*****************************************************************//**
	 * \brief 初期化処理
	 * 
	 * \param pDevice	デバイス 
	 * \return true		正常終了
	 * \return false	初期化に失敗
	 *********************************************************************/
	bool Init(ID3D12Device* pDevice);
	
	/*****************************************************************//**
	 * \brief 終了処理
	 *********************************************************************/
	void Term();

	/*****************************************************************//**
	 * \brief 描画処理
	 * 
	 * \param pCmdList コマンドリスト
	 *********************************************************************/
	void Draw(ID3D12GraphicsCommandList* pCmdList);

	//!}
private:
	//-----------------------------------------------------------------------------
	// private variables.
	//-----------------------------------------------------------------------------
	//!{
	
	VertexBuffer					m_VB;		// 頂点バッファ
	IndexBuffer						m_IB;		// インデックスバッファ
	ComPtr<ID3D12PipelineState>     m_pPSO;		// パイプラインステート
	ComPtr<ID3D12RootSignature>     m_pRootSig; // ルートシグニチャ


	//!} 
	//-----------------------------------------------------------------------------
	// private methods.
	//-----------------------------------------------------------------------------
	//!{

	Sprite(const Sprite&) = delete;				// アクセス禁止
	void operator = (const Sprite&) = delete;	// アクセス禁止

	//!} 
};