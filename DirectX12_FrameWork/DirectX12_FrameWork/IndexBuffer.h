/*****************************************************************//**
 * \file   IndexBuffer.h
 * \brief  インデックスバッファクラス
 * 
 * \author Hiroto Kuge
 * \date   October 2022
 *********************************************************************/
#pragma once

//-----------------------------------------------------------------------------
// Includes.
//-----------------------------------------------------------------------------
#include <cstdint>
#include <d3d12.h>
#include "ComPtr.h"

class IndexBuffer{
	//-----------------------------------------------------------------------------
	// list of friends classes and methods.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
public:
	//-----------------------------------------------------------------------------
	// public variables.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
	//-----------------------------------------------------------------------------
	// public methods.
	//-----------------------------------------------------------------------------
	//!{
	
	/*****************************************************************//**
	 * \brief コンストラクタ
	 *********************************************************************/
	IndexBuffer();

	/*****************************************************************//**
	 * \brief デストラクタ
	 *********************************************************************/
	~IndexBuffer();

	/*****************************************************************//**
	 * \brief 初期化処理
	 * \param pDevice	デバイス
	 * \param size		インデックスバッファサイズ
	 * \param pInitData	初期化データ(配列の先頭アドレス)
	 * \return true		初期化成功
	 * \return false	初期化失敗		
	 *********************************************************************/
	bool Init(
		ID3D12Device*	pDevice, 
		size_t			size, 
		const uint32_t* pInitData = nullptr);

	/*****************************************************************//**
	 * \brief 終了処理
	 *********************************************************************/
	void Term();

	/*****************************************************************//**
	 * \brief	メモリマッピング
	 * \return	マップ済みポインタ
	 *********************************************************************/
	uint32_t* Map();
	
	/*****************************************************************//**
	 * \brief メモリマッピングを解除
	 *********************************************************************/
	void Unmap();

	/*****************************************************************//**
	 * \brief	インデックスバッファビューを取得
	 * \return	インデックスバッファビュー
	 *********************************************************************/
	D3D12_INDEX_BUFFER_VIEW GetView() const;

	//!}
 
private:
	//-----------------------------------------------------------------------------
	// private variables.
	//-----------------------------------------------------------------------------
	//!{
	
	ComPtr<ID3D12Resource>	m_pIB;	// インデックスバッファ
	D3D12_INDEX_BUFFER_VIEW m_view;	// インデックスバッファビュー
	
	//!} 
	//-----------------------------------------------------------------------------
	// private methods.
	//-----------------------------------------------------------------------------
	//!{
	
	IndexBuffer(const IndexBuffer&) = delete;
	void operator = (const IndexBuffer&) = delete;
	
	//!} 
};