/*****************************************************************//**
 * \file   Mesh.h
 * \brief  メッシュクラス
 * 
 * \author Hiroto Kuge
 * \date   October 2022
 *********************************************************************/
#pragma once

//-----------------------------------------------------------------------------
// Includes.
//-----------------------------------------------------------------------------
#include "SharedStruct.h"
#include "VertexBuffer.h"
#include "IndexBuffer.h"


 //-----------------------------------------------------------------------------
 // Mesh Class
 //-----------------------------------------------------------------------------
class Mesh{
	//-----------------------------------------------------------------------------
	// list of friend classes and methods.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
public: 
	//-----------------------------------------------------------------------------
	// public variables.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
	//-----------------------------------------------------------------------------
	// public methods.
	//-----------------------------------------------------------------------------
	//!{
	
	/*****************************************************************//**
	 * \brief コンストラクタ
	 *********************************************************************/
	Mesh();

	/*****************************************************************//**
	 * \brief デストラクタ
	 *********************************************************************/
	~Mesh();	

	/*****************************************************************//**
	 * \brief 初期化処理
	 * 
	 * \param pDevice	デバイス
	 * \param resouse	メッシュリソース
	 * \return true		正常終了 
	 * \return false	初期化に失敗
	 *********************************************************************/
	bool Init(ID3D12Device* pDevice, const ResMesh& resouse);

	/*****************************************************************//**
	 * \brief 終了処理
	 *********************************************************************/
	void Term();

	/*****************************************************************//**
	 * \brief 描画処理
	 * 
	 * \param pCmdList コマンドリスト
	 *********************************************************************/
	void Draw(ID3D12GraphicsCommandList* pCmdList);
	
	/*****************************************************************//**
	 * \brief マテリアルIDを取得 
	 * 
	 * \return マテリアルID
	 *********************************************************************/
	uint32_t GetMaterialID()const;

	//!}
private: 
	//-----------------------------------------------------------------------------
	// private variables.
	//----------------------------------------------------------------------------- 
	//!{
	
	VertexBuffer	m_VB;			// 頂点バッファ
	IndexBuffer		m_IB;			// インデックスバッファ
	uint32_t		m_materialID;	// マテリアルID
	uint32_t		m_indexCnt;		// インデックス数
	
	//!}
	//-----------------------------------------------------------------------------
	// private methods.
	//-----------------------------------------------------------------------------
	//!{
	
	Mesh(const Mesh&) = delete;				// アクセス禁止
	void operator = (const Mesh&) = delete;	// アクセス禁止

	//!}   
};

